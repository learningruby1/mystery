- @amount_index = 0
- hash_index = get_index_hash(@answers)
- @answers.each do |answer|
  = f.fields_for 'answers[]', answer do |a|
    = a.hidden_field :template_field_id, :value => answer.template_field_id

    - if answer.template_field == @answers.first.template_field && !answer.template_field.template_step.amount_field_id.nil?
      - if answer.template_field.header_ids.nil?
        .jumbotron.counter.new_roman
          .container
            %span{ :class => 'first_dependant_field' }
              = DocumentAnswer::NUMBER_NAME[@amount_index]
            %span{ :class => 'second_dependant_field' }
      - @amount_index += 1

    %div{ :class => ("toggle_#{ answer.template_field.toggle_id + answer.toggler_offset }" if !answer.template_field.toggle_id.nil?), :data => { :toggle_option => return_toggle_option(answer, @document), :sub_toggle => ("#{ answer.template_field.sub_toggle_id + answer.toggler_offset }" if answer.template_field.sub_toggle_id.present?), :mandatory_field => ("#{ answer.template_field.mandatory[:template_field] } " if answer.template_field.mandatory.present? && answer.template_field.mandatory[:template_field].present?), :insert_place => ("#{ answer.template_field.insert_place.to_i + answer.toggler_offset }" if answer.template_field.insert_place.present?) } }

      -#NOTICE: fields can contain toggle_x class, if so, they can't contain any other classes!!1
      - case answer.template_field.field_type

      - when /date|time|day_of_week/
        = render :partial => 'document_answers/fields/datetime', :locals => { :a => a, :answer => answer }

      - when /states|select_person/
        = render :partial => 'document_answers/fields/persons_and_states', :locals => { :a => a, :answer => answer }

      - when /text_radio/
        = render :partial => 'document_answers/fields/text_radio', :locals => { :a => a, :answer => answer }

      - when /text|label/
        = render :partial => 'document_answers/fields/text', :locals => { :a => a, :answer => answer }

      - when /radio/
        = render :partial => 'document_answers/fields/radio', :locals => { :a => a, :answer => answer }

      - when /loop_button/
        = render :partial => 'document_answers/fields/loop_button', :locals => { :a => a, :answer => answer }

      - when /sub_amount/
        = render :partial => 'document_answers/fields/sub_amount', :locals => { :a => a, :answer => answer }

      - when /amount/
        = render :partial => 'document_answers/fields/amount', :locals => { :a => a, :answer => answer }

      - when /redirect/
        = render :partial => 'document_answers/fields/redirect', :locals => { :a => a, :answer => answer }

      - when /string/
        - @count_index = hash_index[answer.sort_index]
        = render :partial => 'document_answers/fields/string', :locals => { :a => a, :answer => answer }
        - if answer.template_field.to_text(@document, @amount_index).match(/<beginText\/>/)
          - hash_index[answer.sort_index] += 1 rescue nil

      - when /checkbox/
        = render :partial => 'document_answers/fields/checkbox', :locals => { :a => a, :answer => answer }

      - else
        = render :partial => "document_answers/fields/#{ answer.template_field.field_type }", :locals => { :a => a, :answer => answer }
